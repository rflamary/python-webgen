#!/usr/bin/python

from __future__ import print_function


import sys,webgen,argparse,os

sys.path.append( ".." )


c_file='website.cfg'


default_config="""
[General]
# langage of pages and posts with no lang info
lang=en

# directories for website source, website output and templates
srcdir='src'
outdir='out'
templdir='templates'
plugdir='plugins'

# default templates (when no template is given in the Salut)
default_template='default'
default_post_template='default'
default_markup='markdown'

#plugins
plugins=menu,copyfile

# generates html for posts
generate_posts=False

[Default]

base_name='Website name'
base_subname='Awesome website'
base_author='me !'

[copy]
list='images/*','*.css','*.js'
"""

default_page="""---
title: empty page
---

# {{ title }}

## Subtitle

empty text
"""

default_template="""
{{ content }}

"""

def init(config):
    sys.path.append('md_extensions')




def init_default_website():
    try:
        os.mkdir('src')
        os.mkdir('templates')

        # default page
        f=open('src/index.page','w')
        f.write(default_page)
        f.close()

        f=open('website.cfg','w')
        f.write(default_config)
        f.close()

        f=open('templates/default.template','w')
        f.write(default_template)
        f.close()


    except :
        print("Error: already existing files, use empty folder")

    
def main(argv):  

    parser = argparse.ArgumentParser(prog='pywebgen',
                                     formatter_class=argparse.RawDescriptionHelpFormatter,
        description='''pywebgen is a python version of the webgen generator''',
    epilog='''''')   
    
    parser.add_argument('-c','--configfile', type=str, nargs=1,
                   help='set the configuration file',action="store",default=c_file) 
    parser.add_argument('-v','--verbose',help='print information during website generation', action='store_true')
    parser.add_argument('-i','--init',help='create simple stater website in the current folder', action='store_true')
    parser.add_argument('-p','--path',type=str,default='',nargs=1,help='')
                   
    args= parser.parse_args()   
    
    
    if args.init:
        init_default_website()
    else:    
        config=webgen.load_config(args.configfile)
        if args.path:
            os.chdir(args.path[0])
        if config==None:
            print('bad config file format')   
        else:
            init(config)
            if not os.path.isfile(args.configfile):
                print('Warning : no configuration file "{}", using default values'.format(args.configfile))
            site=webgen.website(args.configfile,verbose=args.verbose)
            site.generate_website()


if __name__ == "__main__":
   #import doctest
   #doctest.testmod(verbose=True)   
   main(sys.argv[1:])
